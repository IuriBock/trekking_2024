pip install bluerobotics_navigator

import bluerobotics_navigator as navigator
import RPi.GPIO as gpio
import time
import pigpio



# Definir pinos dos motores
PWM_PIN_M = navigator.PwmChannel.Ch2 # Pino PWM para o motor 
IN1_PIN_M = 23  # Pino IN1 para o motor s
IN2_PIN_M = 24  # Pino IN2 para o motor 

# Definir pino do servo motor
SERVO_PIN = navigator.PwmChannel.Ch1 # Pino para o servo motor



# Inicializar o Navigator
navigator.init() 

# Inicializar gpio
gpio.setmode(gpio.BCM)
gpio.setup(IN1_PIN_M, gpio.OUT)
gpio.setup(IN2_PIN_M, gpio.OUT)

# Inicializar pigpio para controle de servo
pi = pigpio.pi()



# Funções de controle dos motores
def motor_forward(pin_pwm, pin_in1, pin_in2):
    gpio.output(pin_in1, gpio.HIGH)
    gpio.output(pin_in2, gpio.LOW)
    pwm = gpio.PWM(pin_pwm, 100)
    pwm.start(50)
    return pwm

def motor_backward(pin_pwm, pin_in1, pin_in2):
    gpio.output(pin_in1, gpio.LOW)
    gpio.output(pin_in2, gpio.HIGH)
    pwm = gpio.PWM(pin_pwm, 100)
    pwm.start(50)
    return pwm

def stop_motor(pwm):
    pwm.stop()

# Função para controlar o servo motor
def set_servo_angle(angle):
    duty = (angle / 18) + 2
    pi.set_servo_pulsewidth(SERVO_PIN, duty)




# Exemplo de movimento do carrinho
try:
    pwm_motor = motor_forward(PWM_PIN_M, IN1_PIN_M, IN2_PIN_M)
    set_servo_angle(90)  # Posição central do servo

    time.sleep(2)  # Movimento para frente por 2 segundos

    stop_motor(pwm_motor)

    time.sleep(1)  # Pausa de 1 segundo

    pwm_motor = motor_backward(PWM_PIN_M, IN1_PIN_M, IN2_PIN_M)

    time.sleep(2)  # Movimento para trás por 2 segundos

    stop_motor(pwm_motor)


except KeyboardInterrupt:
    stop_motor(pwm_motor)
    gpio.cleanup()
    pi.stop()
